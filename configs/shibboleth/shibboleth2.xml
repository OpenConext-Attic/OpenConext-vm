<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config"
    xmlns:conf="urn:mace:shibboleth:2.0:native:sp:config"
    xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
    xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"    
    xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
    logger="syslog.logger" clockSkew="180">

    <!-- The OutOfProcess section contains properties affecting the shibd daemon. -->
    <OutOfProcess logger="shibd.logger">
        <!--
        <Extensions>
            <Library path="odbc-store.so" fatal="true"/>
        </Extensions>
        -->
    </OutOfProcess>

    <!--
    The InProcess section contains settings affecting web server modules.
    Required for IIS, but can be removed when using other web servers.
    -->
    <InProcess logger="native.logger">
        <ISAPI normalizeRequest="true" safeHeaderNames="true">
            <!--
            Maps IIS Instance ID values to the host scheme/name/port. The name is
            required so that the proper <Host> in the request map above is found without
            having to cover every possible DNS/IP combination the user might enter.
            -->
            <Site id="1" name="sp.example.org"/>
            <!--
            When the port and scheme are omitted, the HTTP request's port and scheme are used.
            If these are wrong because of virtualization, they can be explicitly set here to
            ensure proper redirect generation.
            -->
            <!--
            <Site id="42" name="virtual.example.org" scheme="https" port="443"/>
            -->
        </ISAPI>
    </InProcess>
    
    <!-- Only one listener can be defined, to connect in-process modules to shibd. -->
    <UnixListener address="shibd.sock"/>
    <!-- <TCPListener address="127.0.0.1" port="1600" acl="127.0.0.1"/> -->
    
    <!-- This set of components stores sessions and other persistent data in daemon memory. -->
    <StorageService type="Memory" id="mem" cleanupInterval="900"/>
    <SessionCache type="StorageService" StorageService="mem" cacheAssertions="false"
                  cacheAllowance="900" inprocTimeout="900" cleanupInterval="900"/>
    <ReplayCache StorageService="mem"/>
    <ArtifactMap artifactTTL="180"/>

    <!--
    To customize behavior for specific resources on Apache, and to link vhosts or
    resources to ApplicationOverride settings below, use web server options/commands.
    See https://spaces.internet2.edu/display/SHIB2/NativeSPConfigurationElements for help.
    
    For examples with the RequestMap XML syntax instead, see the example-shibboleth2.xml
    file, and the https://spaces.internet2.edu/display/SHIB2/NativeSPRequestMapHowTo topic.
    -->
    <RequestMapper type="Native">
        <RequestMap>
            <!--
            The example requires a session for documents in /secure on the containing host with http and
            https on the default ports. Note that the name and port in the <Host> elements MUST match
            Apache's ServerName and Port directives or the IIS Site name in the <ISAPI> element above.
            <Host name="sp.example.org">
                <Path name="secure" authType="shibboleth" requireSession="true"/>
            </Host>
            -->
            <!-- Example of a second vhost mapped to a different applicationId. -->
            <!--
            <Host name="admin.example.org" applicationId="admin" authType="shibboleth" requireSession="true"/>
            -->
        </RequestMap>
    </RequestMapper>

    <!--
    The ApplicationDefaults element is where most of Shibboleth's SAML bits are defined.
    Resource requests are mapped by the RequestMapper to an applicationId that
    points into to this section (or to the defaults here).
    -->
    <ApplicationDefaults entityID="https://teams._OPENCONEXT_DOMAIN_/shibboleth"
                         REMOTE_USER="name-id"
                         signing="true" encryption="true">

        <!--
        Controls session lifetimes, address checks, cookie handling, and the protocol handlers.
        You MUST supply an effectively unique handlerURL value for each of your applications.
        The value defaults to /Shibboleth.sso, and should be a relative path, with the SP computing
        a relative value based on the virtual host. Using handlerSSL="true", the default, will force
        the protocol to be https. You should also add a cookieProps setting of "; path=/; secure"
        in that case. Note that while we default checkAddress to "false", this has a negative
        impact on the security of the SP. Stealing cookies/sessions is much easier with this disabled.
        -->
        <Sessions lifetime="28800"
                  timeout="3600"
                  checkAddress="true"
                  handlerURL="/Shibboleth.sso"
                  handlerSSL="true"
                  relayState="ss:mem"
                  exportLocation="https://teams._OPENCONEXT_DOMAIN_/Shibboleth.sso/GetAssertion"
                  exportACL="127.0.0.1"
                  idpHistory="false"
                  idpHistoryDays="7"
                  cookieProps="; path=/; secure; httpOnly">

            <!--
            The "stripped down" files use the shorthand syntax for configuring handlers.
            This uses the old "every handler specified directly" syntax. You can replace
            or supplement the new syntax following these examples.
            -->
          
            <!--
            SessionInitiators handle session requests and relay them to a Discovery page,
            or to an IdP if possible. Automatic session setup will use the default or first
            element (or requireSessionWith can specify a specific id to use).
            -->

            <!-- Default directs to a specific IdP (favoring SAML 2 over Shib 1). -->
            <SessionInitiator type="Chaining"
                              Location="/Login"
                              isDefault="true"
                              id="Login"
                              relayState="cookie"
                              entityID="https://engine._OPENCONEXT_DOMAIN_/authentication/idp/metadata">
              
                <SessionInitiator type="SAML2"
                                  NameIDFormat="urn:oasis:names:tc:SAML:2.0:nameid-format:unspecified"
                                  template="bindingTemplate.html"/>

                <!--
                To allow for >1 IdP, remove entityID property from Chaining element and add
                *either* of the SAMLDS or WAYF handlers below:
                
                <SessionInitiator type="SAMLDS" URL="https://ds.example.org/DS/WAYF"/>
                <SessionInitiator type="WAYF" URL="https://wayf.example.org/WAYF"/>
                -->
            </SessionInitiator>
            
            <!--
            md:AssertionConsumerService locations handle specific SSO protocol bindings,
            such as SAML 2.0 POST or SAML 1.1 Artifact. The isDefault and index attributes
            are used when sessions are initiated to determine how to tell the IdP where and
            how to return the response.
            -->
            <md:AssertionConsumerService Location="/SAML2/POST" index="1"
                Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"/>
            <md:AssertionConsumerService Location="/SAML2/POST-SimpleSign" index="2"
                Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign"/>
            <md:AssertionConsumerService Location="/SAML2/Artifact" index="3"
                Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact"/>
            <md:AssertionConsumerService Location="/SAML2/ECP" index="4"
                Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS"/>
            <md:AssertionConsumerService Location="/SAML/POST" index="5"
                Binding="urn:oasis:names:tc:SAML:1.0:profiles:browser-post"/>
            <md:AssertionConsumerService Location="/SAML/Artifact" index="6"
                Binding="urn:oasis:names:tc:SAML:1.0:profiles:artifact-01"/>

            <!-- LogoutInitiators enable SP-initiated local or global/single logout of sessions. -->
            <LogoutInitiator type="Chaining" Location="/Logout" relayState="cookie">
                <LogoutInitiator type="SAML2" template="bindingTemplate.html"/>
                <LogoutInitiator type="Local"/>
            </LogoutInitiator>

            <!-- md:SingleLogoutService locations handle single logout (SLO) protocol messages. -->
            <md:SingleLogoutService Location="/SLO/SOAP"
                Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP"/>
            <md:SingleLogoutService Location="/SLO/Redirect" conf:template="bindingTemplate.html"
                Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"/>
            <md:SingleLogoutService Location="/SLO/POST" conf:template="bindingTemplate.html"
                Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"/>
            <md:SingleLogoutService Location="/SLO/Artifact" conf:template="bindingTemplate.html"
                Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact"/>

            <!-- md:ManageNameIDService locations handle NameID management (NIM) protocol messages. -->
            <md:ManageNameIDService Location="/NIM/SOAP"
                Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP"/>
            <md:ManageNameIDService Location="/NIM/Redirect" conf:template="bindingTemplate.html"
                Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"/>
            <md:ManageNameIDService Location="/NIM/POST" conf:template="bindingTemplate.html"
                Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"/>
            <md:ManageNameIDService Location="/NIM/Artifact" conf:template="bindingTemplate.html"
                Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact"/>

            <!--
            md:ArtifactResolutionService locations resolve artifacts issued when using the
            SAML 2.0 HTTP-Artifact binding on outgoing messages, generally uses SOAP.
            -->
            <md:ArtifactResolutionService Location="/Artifact/SOAP" index="1"
                Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP"/>

            <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
            <Handler type="MetadataGenerator" Location="/Metadata" signing="false"/>

            <!-- Status reporting service. -->
            <Handler type="Status" Location="/Status" acl="127.0.0.1"/>

            <!-- Session diagnostic service. -->
            <Handler type="Session" Location="/Session" showAttributeValues="false"/>

            <!-- JSON feed of discovery information. -->
            <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>
        </Sessions>


        <MetadataProvider type="Chaining">
            <!-- Metadata of IdP's registered with Engineblock -->
            <MetadataProvider type="XML"
                              uri="https://engine._OPENCONEXT_DOMAIN_/authentication/proxy/idps-metadata?sp-entity-id=https://teams._OPENCONEXT_DOMAIN_/shibboleth"
                              backingFilePath="/etc/shibboleth/engineblock-idps-metadata-saml2.xml"
                              reloadInterval="7200">
            </MetadataProvider>
        </MetadataProvider>

        <!-- TrustEngines run in order to evaluate peer keys and certificates. -->
        <TrustEngine type="ExplicitKey"/>
        <TrustEngine type="PKIX"/>

        <!-- Map to extract attributes from SAML assertions. -->
        <AttributeExtractor type="XML" validate="true" path="attribute-map.xml"/>
        
        <!-- Use a SAML query if no attributes are supplied during SSO. -->
        <AttributeResolver type="Query" subjectMatch="true"/>

        <!-- Default filtering policy for recognized attributes, lets other data pass. -->
        <AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

        <!-- Simple file-based resolver for using a single keypair. -->
        <CredentialResolver type="File"
                            key="/etc/httpd/keys/openconext.key"
                            certificate="/etc/httpd/keys/openconext.pem"/>

        <!--
        The default settings can be overridden by creating ApplicationOverride elements (see
        the https://spaces.internet2.edu/display/SHIB2/NativeSPApplicationOverride topic).
        Resource requests are mapped by web server commands, or the RequestMapper, to an
        applicationId setting.
        
        Example of a second application (for a second vhost) that has a different entityID.
        Resources on the vhost would map to an applicationId of "admin":
        -->
        <!--
        <ApplicationOverride id="admin" entityID="https://admin.example.org/shibboleth"/>
        -->

        <ApplicationOverride id="teams" entityID="https://teams._OPENCONEXT_DOMAIN_/shibboleth">
            <MetadataProvider type="Chaining">
                <!-- Engineblock IDP metadata -->
                <MetadataProvider type="XML"
                                  uri="https://engine._OPENCONEXT_DOMAIN_/authentication/idp/metadata?sp-entity-id=https://teams._OPENCONEXT_DOMAIN_/shibboleth"
                                  backingFilePath="/etc/shibboleth/engineblock-metadata-saml2-teams.xml"
                                  reloadInterval="7200">
                </MetadataProvider>

                <!-- Metadata of IdP's registered with Engineblock -->
                <MetadataProvider type="XML"
                                  uri="https://engine._OPENCONEXT_DOMAIN_/authentication/proxy/idps-metadata?sp-entity-id=https://teams._OPENCONEXT_DOMAIN_/shibboleth"
                                  backingFilePath="/etc/shibboleth/engineblock-idps-metadata-saml2-teams.xml"
                                  reloadInterval="7200">
                </MetadataProvider>
            </MetadataProvider>
        </ApplicationOverride>

        <!-- Because Grouper lives in a seperate path, we need to configure more then host-only entityID's -->
        <ApplicationOverride id="grouper" entityID="https://grouper._OPENCONEXT_DOMAIN_/grouper/shibboleth">
            <Sessions lifetime="28800"
              timeout="3600"
              checkAddress="true"
              handlerURL="/grouper/Shibboleth.sso"
              handlerSSL="true"
              relayState="ss:mem"
              exportLocation="https://grouper._OPENCONEXT_DOMAIN_/grouper/Shibboleth.sso/GetAssertion"
              exportACL="127.0.0.1"
              idpHistory="false"
              idpHistoryDays="7"
              cookieProps="; path=/grouper; secure; httpOnly">

                <!-- Default directs to a specific IdP (favoring SAML 2 over Shib 1). -->
                <SessionInitiator type="Chaining"
                                  Location="/Login"
                                  isDefault="true"
                                  id="Login"
                                  relayState="cookie"
                                  entityID="https://engine._OPENCONEXT_DOMAIN_/authentication/idp/metadata">

                    <SessionInitiator type="SAML2"
                                      NameIDFormat="urn:oasis:names:tc:SAML:2.0:nameid-format:unspecified"
                                      template="bindingTemplate.html"/>
                </SessionInitiator>

                <md:AssertionConsumerService Location="/SAML2/POST" index="1" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"/>
            </Sessions>

            <MetadataProvider type="Chaining">
                <!-- Engineblock Management VO metadata -->
                <MetadataProvider type="XML"
                                  uri="https://engine._OPENCONEXT_DOMAIN_/authentication/idp/metadata"
                                  backingFilePath="/etc/shibboleth/engineblock-metadata-saml2-grouper.xml"
                                  reloadInterval="7200">
                </MetadataProvider>
            </MetadataProvider>
        </ApplicationOverride>
    </ApplicationDefaults>
    
    <!-- Policies that determine how to process and authenticate runtime messages. -->
    <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

    <!-- Low-level configuration about protocols and bindings available for use. -->
    <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

</SPConfig>

[demo : base]

serviceRegistry.caching.lifetime = 0;

; Environment ENV extends from base (application.ini)
; IMPORTANT: set 'ENV' to a meaningful name for your environment
; suggestions: production, staging, testing or dev

; Timezone to use, for a list of supported timezones, please go to:
; http://www.php.net/manual/en/timezones.php
phpSettings.date.timezone = "Europe/Amsterdam"

; File based logging (required, make sure the file exists and is writable for Apache)
error.reports.log = true;
logs.file.writerName = "Stream"
logs.file.writerParams.stream = "/var/log/surfconext/engineblock.log"

; Receive an e-mail for every error
;logs.mail.writerName = "Mail"
;logs.mail.writerNamespace = "EngineBlock_Log_Writer"
;logs.mail.filterName = "Priority"
;logs.mail.filterParams.priority = 3 ; Errors
;logs.mail.writerParams.from.email = "manage@example.edu"
;logs.mail.writerParams.from.name  = "SURFconext EngineBlock"
;logs.mail.writerParams.to.0.name  = "Sysadmin"
;logs.mail.writerParams.to.0.email = "sysadmin@example.edu"
;logs.mail.writerParams.cc.0.name  = "Developer"
;logs.mail.writerParams.cc.0.email = "developer@example.edu"
; Valid transports: Smtp, Pop3, Imap
;logs.mail.writerParams.transportName = "Smtp"
;logs.mail.writerParams.transportParams.host = "localhost"
;logs.mail.writerParams.transportParams.port = 25
;logs.mail.writerParams.transportParams.ssl = "SSL" ; Also supported: "TLS"
; SMTP authentication, supported: Login, Crammd5, Plain
;logs.mail.writerParams.transportParams.auth = "Login"
;logs.mail.writerParams.transportParams.username = ""
;logs.mail.writerParams.transportParams.password = ""
; Filter the following values from the (unsecured) mail
; Note that this is done with a simple search and replace,
; so better make sure the values are unique enough!
;logs.mail.writerParams.filterValues[] = "encryption.key.private"
;logs.mail.writerParams.filterValues[] = "ldap.password"
;logs.mail.writerParams.filterValues[] = "database.master1.password"
;logs.mail.writerParams.filterValues[] = "database.slave1.password"
;logs.mail.writerParams.filterValues[] = "serviceRegistry.user_secret"

; Configuration for the LDAP to use for user provisioning and as datastore for the OpenSocial API.
ldap.host               = "ldap._OPENCONEXT_DOMAIN_"
ldap.userName           = "cn=engine,dc=surfconext,dc=nl"
ldap.password           = "jf7RH4Hj20De"
ldap.accountDomainName  = "surfconext.nl"
ldap.baseDn             = "dc=surfconext,dc=nl"

; Memcache configuration, for general caching use.
;memcache.locahost.host            = "localhost"
;memcache.localhost.port           = 11211
;memcache.localhost.persistent     = true
;memcache.localhost.weight         = 0
;memcache.localhost.timeout        = 1
;memcache.localhost.retry_interval = 15
memcache.servers[] = "localhost"

; Details for the Service Registry (datastore for all SPs and IdPs)
serviceRegistry.location    = "https://serviceregistry._OPENCONEXT_DOMAIN_/simplesaml/module.php/janus/services/rest/"
serviceRegistry.user        = "engine"
serviceRegistry.user_secret = "engineblock"
serviceRegistry.caching.backend.options.lifetime = 1;

; Credentials for the database to use
database.master1.dsn      = "mysql:host=localhost;dbname=engineblock"
database.master1.user     = "root"
database.master1.password = "c0n3xt"
database.masters[]  = "master1"
database.slaves[]   = "master1"

; Log filtering
logs.mail.writerParams.filterValues[] = "encryption.key.private"
logs.mail.writerParams.filterValues[] = "ldap.password"
logs.mail.writerParams.filterValues[] = "serviceRegistry.user_secret"
logs.mail.writerParams.filterValues[] = "database.master1.password"
logs.mail.writerParams.filterValues[] = "grouper.password"
logs.mail.writerParams.filterValues[] = "hz.auth.consumerSecret"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;; SIMPLESAML SETTINGS ;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; The configuration entries below are for protecting the profile && vomanage interfaces using SimpleSamlphp

; EntityID for the IdentityProvider
auth.simplesamlphp.idp.entityId   = "https://engine._OPENCONEXT_DOMAIN_/authentication/idp/metadata"

; SingleSignOnLocation to use
auth.simplesamlphp.idp.location   = "https://engine._OPENCONEXT_DOMAIN_/authentication/idp/single-sign-on"

; SAML2 binding to use
auth.simplesamlphp.idp.binding    = "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"

; PEM encoded public key / certificate for Identity Provider
; Not needed here. Will be added later on by engineblock install script
; auth.simplesamlphp.idp.cert       = ""

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; MISCELLANEOUS SETTINGS ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Static URI settings
static.protocol     = "https"
static.host         = "static._OPENCONEXT_DOMAIN_"

; Language Cookie settings
cookie.lang.domain = "_OPENCONEXT_DOMAIN_"
; Cookie expiry time, specify the time in seconds, set empty to let the cooky get expired after the session
cookie.lang.expiry = "60*60*24*60"

; logs
logs.mail.writerName = "Mail"
logs.mail.writerNamespace = "EngineBlock_Log_Writer"
logs.mail.filterName = "Priority"
logs.mail.filterParams.priority = 3 ; Errors
logs.mail.writerParams.filterValues[] = "encryption.key.private"
logs.mail.writerParams.filterValues[] = "ldap.password"
logs.mail.writerParams.filterValues[] = "serviceRegistry.user_secret"
logs.mail.writerParams.filterValues[] = "database.master1.password"
logs.mail.writerParams.filterValues[] = "grouper.password"
logs.mail.writerParams.filterValues[] = "hz.auth.consumerSecret"
logs.mail.writerParams.from.email = "noreply@surfnet.nl"
logs.mail.writerParams.from.name  = "SURFconext EngineBlock"
ldap.useSsl = false
phpSettings.display_errors = true

; group provider 
api.vovalidate.baseUrl = "https://api._OPENCONEXT_DOMAIN_"
api.vovalidate.key = "oauth_key"
api.vovalidate.secret = "oauth_secret"

email.sendWelcomeMail = false

; the value for guest qualifier. Can be overridden for specific non-surfnet environments
addgueststatus.guestqualifier = "urn:collab:org:surf.nl"

dynamicAssets = true
